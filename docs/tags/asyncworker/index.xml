<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>asyncworker on </title>
    <link>https://daltonmatos.com/tags/asyncworker/</link>
    <description>Recent content in asyncworker on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sat, 04 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://daltonmatos.com/tags/asyncworker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Asyncworker: Handler HTTP recebendo mais do que Request</title>
      <link>https://daltonmatos.com/2020/01/asyncworker-handler-http-recebendo-mais-do-que-request/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://daltonmatos.com/2020/01/asyncworker-handler-http-recebendo-mais-do-que-request/</guid>
      <description>Contexto Uma implementação recente no asyncworker (doc) permitiu que um handler http pudesse receber parâmetros mais complexos do que simplesmente Request, que é o que normalmente um handler http recebe. Essa implementação permite que possíveis valores possam ser acumulados ao longo da execução do código e no momento que o handler for chamado para atender o Request atual, esses valores seriam consultados para saber se o handler está interessado em receber algum deles.</description>
    </item>
    
    <item>
      <title>Escrevendo workers assíncronos em python com asyncowrker</title>
      <link>https://daltonmatos.com/2019/03/escrevendo-workers-assincronos-em-python-com-asyncowrker/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://daltonmatos.com/2019/03/escrevendo-workers-assincronos-em-python-com-asyncowrker/</guid>
      <description>Olhando o histórico de commits, o primeiro data de 19/Jan/2017. Essa talvez seja a data oficial do início do que chamamos de asyncworker.
O projeto nasceu para facilitar a escrita de workers assíncronos em python. Inicialmente eram workers para rabbitmq. Mas com o tempo surgiram oportunidades de implementar suporte a outros &amp;ldquo;backends&amp;rdquo;, por assim dizer.
Backends atualmente suportados Até a data de hoje o projeto suporta os seguintes backends:
 RabbitMQ Server Side Events HTTP Tarefas recorrentes  E a ideia é adicionar suporte a mais backends com o tempo.</description>
    </item>
    
  </channel>
</rss>